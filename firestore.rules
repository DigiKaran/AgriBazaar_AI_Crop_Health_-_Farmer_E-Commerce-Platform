
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper functions ---
    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isExpert() {
      return request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'expert';
    }

    // --- Rules for 'users' collection ---
    match /users/{userId} {
      // CORRECTED RULE: A user can always get their own document. This breaks the recursion.
      // An admin or expert can get any user's document.
      allow get: if isUser(userId) || isAdmin() || isExpert();

      // LIST: Only admins can list/query all users.
      allow list: if isAdmin();
      
      // CREATE: A user can create their own profile document.
      allow create: if isUser(userId);
      
      // UPDATE: Admins can update any user. A user can only update their own profile without changing their role or status.
      allow update: if isAdmin() || (isUser(userId) && request.resource.data.role == resource.data.role && request.resource.data.status == resource.data.status);
      
      // DELETE: Only admins can delete users.
      allow delete: if isAdmin();
    }

    // --- Rules for 'products' and 'product_categories' ---
    match /products/{productId} {
        allow get, list: if true;
        allow write: if isAdmin();
    }

    match /product_categories/{categoryId} {
      allow get, list: if true;
      allow write: if isAdmin();
    }

    // --- Rules for 'diagnosis_history' collection ---
    match /diagnosis_history/{docId} {
      allow create: if isUser(request.resource.data.userId);
      allow get: if isUser(resource.data.userId) || isAdmin() || isExpert();
      allow list: if isUser(resource.data.userId) || isAdmin() || isExpert();
      allow update: if isUser(resource.data.userId) || isAdmin() || isExpert();
      allow delete: if isUser(resource.data.userId) || isAdmin();
    }

    // --- Rules for 'chat_messages' collection ---
    match /chat_messages/{docId} {
      allow read, create: if isUser(request.resource.data.userId);
      allow list: if isUser(request.resource.data.userId);
    }

    // --- Rules for 'orders' collection ---
    match /orders/{orderId} {
      allow create: if isUser(request.resource.data.userId);
      allow read: if isUser(resource.data.userId) || isAdmin();
      allow list: if isUser(resource.data.userId) || isAdmin();
      allow update, delete: if isAdmin();
    }
  }
}
